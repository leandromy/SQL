-- DMFinanceiro.VW_SITUACAO_UNIDADE_UNIFICADA source

CREATE VIEW
[DMFinanceiro].[VW_SITUACAO_UNIDADE_UNIFICADA] AS
	
	/*WITH ULTIMO_DIA_MES AS (
		SELECT MAX(DATA) DATA_MAX
		FROM DMGeral.D_CALENDARIO A
		WHERE (
				ANO = YEAR(GETDATE())
				AND MES = MONTH(GETDATE()) - 1
			)
			OR (
				ANO = YEAR(GETDATE()) - 1
				AND MES = 12
				AND MONTH(GETDATE()) = 1
			)
		UNION
		SELECT MAX(DATA) DATA_MAX
		FROM DMGeral.D_CALENDARIO A
		WHERE (
				ANO = YEAR(GETDATE())
				AND MES = MONTH(GETDATE()) - 2
			)
			OR (
				ANO = YEAR(GETDATE()) - 1
				AND MES = 11
				AND MONTH(GETDATE()) = 1
			)
		UNION
		SELECT DATA DATA_MAX
		FROM DMGeral.D_CALENDARIO A
		WHERE (
				--ANO = YEAR(GETDATE()) -1
				--AND MES = MONTH(GETDATE())
			--)
		--OR (
				ANO = YEAR(GETDATE())
				AND MES = 1
				AND MONTH(GETDATE()) = 1
			)
	)*/
	--Renato Almeida: Trecho alterado para capturar o último dia do mês dos históricos de 01/2021 até o último antes do mês atual + todos os dias do mês atual
	WITH ULTIMO_DIA_MES AS (
		SELECT DISTINCT EOMONTH(DATA) DATA_MAX
		FROM DMGeral.D_CALENDARIO A
		WHERE ANO >= 2022
			AND DATA <= EOMONTH(GETDATE(), -1)
		UNION
		SELECT DATA DATA_MAX
		FROM DMGeral.D_CALENDARIO A
		WHERE ANO = YEAR(GETDATE())
			AND MES = MONTH(GETDATE())
			AND DIA <= DAY(GETDATE())
	),
	
	
	FUN AS (
		SELECT SK_D_EMPREENDIMENTO,
			SK_D_UNIDADE,
			SK_D_STATUS_UNIDADE,
			DATA_ENTREGA_BLOCO,
			DATA_BASE
		FROM DMGeral.F_UNIDADE FU
			INNER JOIN ULTIMO_DIA_MES UM on FU.DATA_BASE = UM.DATA_MAX
	),
	
	
	MENOR_DATA_VENDA AS (
		SELECT MIN(YEAR(A.DATA_CONTRATO)) SAFRA,
			SK_D_EMPREENDIMENTO
		FROM DMFinanceiro.F_CONTRATO A
		GROUP BY SK_D_EMPREENDIMENTO
	)
	

	SELECT
		emp.CODIGO_EMPREENDIMENTO,
		-- codigo_projeto,
		uni.CODIGO_UNIDADE,
		dp.CODIGO_REDUZIDO_PROJETO,
		X.SAFRA,
		-- H.NOME_TIPO_EMPREENDIMENTO,
		NOME_REGIONAL,
		NOME_CIDADE,
		B.NOME_EMPREENDIMENTO,
		K.NOME_TORRE,
		K.NOME_BLOCO,
		K.NUMERO_APARTAMENTO,
		cast(K.METRAGEM as decimal(18, 2)) as METRAGEM,
		gpr.GRUPO_EMPRESA as GRUPO_EMPRESA,
		K.NUMERO_ANDAR,
		K.CODIGO_MEGA,
		G.DESCRICAO_STATUS STATUS_SYS,
		dsu.DESCRICAO_STATUS_UNIDADE STATUS_MEGA,
		cli.CLIENTE,
		cto.NUMERO_CONTRATO,
		cto.VALOR_CONTRATO_ORIGINAL,
		--cal.DATA AS DATA_VENDA_EFETIVADA,
		CASE
			WHEN cal.DATA = CAST('1900-01-01' AS DATE)
			THEN cto.DATA_CONTRATO
			ELSE cal.DATA
		END AS DATA_VENDA_EFETIVADA,
		uni.STATUS_UNIDADE status_unidade_mega,
		K.SITUACAO_UNIDADE situacao_unidade_sys,
		B.SITUACAO_EMPREENDIMENTO situacao_empreendimento_sys,
		FUN.DATA_BASE,
		I.DATA_DISTRATO,
		cto.DATA_CONTRATO,
		--CASE alterado para conseguir classificar E\S tanto quando há uma venda>distrato como um distrato>venda (não estava conseguindo fazer isso) - Renato Almeida 04/04/22
		CASE
			WHEN MONTH(DATA_DISTRATO) = MONTH(FUN.DATA_BASE)
				AND YEAR(DATA_DISTRATO) = YEAR(FUN.DATA_BASE)
			THEN
				CASE
					WHEN
						/*(cal.MES = MONTH(FUN.DATA_BASE)
							AND cal.ANO = YEAR(FUN.DATA_BASE)
						)
						OR (*/
						MONTH(DATA_DISTRATO) = (
							SELECT TOP 1
								MONTH(MI_A.DATA_CONTRATO)
							FROM DMFinanceiro.F_CONTRATO MI_A
							LEFT JOIN DMGeral.D_UNIDADE MI_B ON MI_B.SK_D_UNIDADE = MI_A.SK_D_UNIDADE
							WHERE MI_B.CODIGO_UNIDADE = uni.CODIGO_UNIDADE
								AND MI_A.DATA_CONTRATO >= I.DATA_DISTRATO
						)
						AND YEAR(DATA_DISTRATO) = (
							SELECT TOP 1
								YEAR(MI_A.DATA_CONTRATO)
							FROM DMFinanceiro.F_CONTRATO MI_A
							LEFT JOIN DMGeral.D_UNIDADE MI_B ON MI_B.SK_D_UNIDADE = MI_A.SK_D_UNIDADE
							WHERE MI_B.CODIGO_UNIDADE = uni.CODIGO_UNIDADE
								AND MI_A.DATA_CONTRATO >= I.DATA_DISTRATO
						)
						--)
					THEN 'E/S'
					ELSE 'DISTRATO'
				END
			
			WHEN cal.DATA != CAST('1900-01-01' AS DATE)
			THEN
				CASE			
					WHEN cal.MES = MONTH(FUN.DATA_BASE)
						AND cal.ANO = YEAR(FUN.DATA_BASE)
					THEN
						CASE
							WHEN cal.MES = (
									SELECT TOP 1
										MONTH(MI_A.DATA_DISTRATO)
									FROM DMFinanceiro.F_DISTRATO MI_A
									LEFT JOIN DMGeral.D_UNIDADE MI_B ON MI_B.SK_D_UNIDADE = MI_A.SK_D_UNIDADE
									WHERE MI_B.CODIGO_UNIDADE = uni.CODIGO_UNIDADE
										AND MI_A.DATA_DISTRATO <= cto.DATA_CONTRATO
								)
								AND cal.ANO = (
									SELECT TOP 1
										YEAR(MI_A.DATA_DISTRATO)
									FROM DMFinanceiro.F_DISTRATO MI_A
									LEFT JOIN DMGeral.D_UNIDADE MI_B ON MI_B.SK_D_UNIDADE = MI_A.SK_D_UNIDADE
									WHERE MI_B.CODIGO_UNIDADE = uni.CODIGO_UNIDADE
										AND MI_A.DATA_DISTRATO <= cto.DATA_CONTRATO
									)
							THEN 'E/S'
							ELSE 'VENDA'
						END
					ELSE 'SEM MOVIMENTO'
				END
			WHEN cal.DATA = CAST('1900-01-01' AS DATE)
			THEN
				CASE			
					WHEN MONTH(cto.DATA_CONTRATO) = MONTH(FUN.DATA_BASE)
						AND YEAR(cto.DATA_CONTRATO) = YEAR(FUN.DATA_BASE)
					THEN
						CASE
							WHEN MONTH(cto.DATA_CONTRATO) = (
									SELECT TOP 1
										MONTH(MI_A.DATA_DISTRATO)
									FROM DMFinanceiro.F_DISTRATO MI_A
									LEFT JOIN DMGeral.D_UNIDADE MI_B ON MI_B.SK_D_UNIDADE = MI_A.SK_D_UNIDADE
									WHERE MI_B.CODIGO_UNIDADE = uni.CODIGO_UNIDADE
										AND MI_A.DATA_DISTRATO <= cto.DATA_CONTRATO
								)
								AND YEAR(cto.DATA_CONTRATO) = (
									SELECT TOP 1
										YEAR(MI_A.DATA_DISTRATO)
									FROM DMFinanceiro.F_DISTRATO MI_A
									LEFT JOIN DMGeral.D_UNIDADE MI_B ON MI_B.SK_D_UNIDADE = MI_A.SK_D_UNIDADE
									WHERE MI_B.CODIGO_UNIDADE = uni.CODIGO_UNIDADE
										AND MI_A.DATA_DISTRATO <= cto.DATA_CONTRATO
									)
							THEN 'E/S'
							ELSE 'VENDA'
						END
					ELSE 'SEM MOVIMENTO'
				END
			ELSE 'SEM MOVIMENTO'
		END MI_69
	FROM FUN
		LEFT JOIN DMGeral.D_EMPREENDIMENTO emp ON emp.SK_D_EMPREENDIMENTO = fun.SK_D_EMPREENDIMENTO
		LEFT JOIN DMGeral.D_UNIDADE uni ON uni.SK_D_UNIDADE = fun.SK_D_UNIDADE
		LEFT JOIN DMGeral.D_PROJETO dp ON dp.SK_D_PROJETO = uni.SK_D_PROJETO
		LEFT JOIN DMGeral.D_STATUS_UNIDADE dsu ON DSU.SK_D_STATUS_UNIDADE = FUN.SK_D_STATUS_UNIDADE
		LEFT JOIN DMFinanceiro.F_CONTRATO cto ON cto.SK_D_UNIDADE = uni.SK_D_UNIDADE
			--filtros no join aplicados para manter apenas o período de contrato ativo (após distrato não aparece mais) - Renato Almeida 04/04/22
			AND FUN.DATA_BASE BETWEEN cto.DATA_CONTRATO
				AND CASE
						WHEN EXISTS(SELECT dist.DATA_DISTRATO FROM DMFinanceiro.F_DISTRATO dist WHERE dist.NUMERO_CONTRATO = cto.NUMERO_CONTRATO)
						THEN EOMONTH((SELECT MAX(dist.DATA_DISTRATO) FROM DMFinanceiro.F_DISTRATO dist WHERE dist.NUMERO_CONTRATO = cto.NUMERO_CONTRATO))
						ELSE GETDATE()
					END
		LEFT JOIN DMGeral.D_CLIENTE cli ON cli.SK_D_CLIENTE = cto.SK_D_CLIENTE
		LEFT JOIN DMSys.F_VENDA vnd ON vnd.CODIGO_VENDA = cto.CONTRATO_SYS
		LEFT JOIN DMGeral.D_GRUPO_EMPRESA gpr on gpr.SK_D_GRUPO_EMPRESA = emp.SK_D_GRUPO_EMPRESA
		LEFT JOIN DMGeral.D_CALENDARIO cal ON cal.SK_CALENDARIO = vnd.SK_D_DATA_VALIDA_VENDA
		INNER JOIN (
			SELECT XA.*
			FROM DMSys.D_UNIDADE XA
				inner join DMGeral.D_UNIDADE b on Xa.CODIGO_MEGA = b.CODIGO_UNIDADE
			WHERE XA.DATA_PROCESSAMENTO = (
					SELECT MAX(DATA_PROCESSAMENTO)
					FROM DMSys.D_UNIDADE IA
					WHERE IA.CODIGO_MEGA IS NOT NULL
						AND IA.CODIGO_MEGA = XA.CODIGO_MEGA
				)
		) K ON K.CODIGO_MEGA = uni.CODIGO_UNIDADE
		LEFT JOIN DMSys.F_EMPREENDIMENTO_HISTORICO A on K.SK_UNIDADE = A.SK_D_UNIDADE
			AND Fun.DATA_BASE = A.DATA_BASE
		INNER JOIN DMSys.D_EMPREENDIMENTO B ON B.SK_EMPREENDIMENTO = A.SK_D_EMPREENDIMENTO
		INNER JOIN DMSys.D_CIDADE B1 ON B1.SK_CIDADE = B.SK_D_CIDADE_EMPREENDIMENTO
		INNER JOIN DMSys.D_REGIONAL F ON F.SK_REGIONAL = A.SK_D_REGIONAL
		INNER JOIN DMSys.D_STATUS_UNIDADE G ON G.SK_STATUS_UNIDADE = A.SK_D_STATUS_UNIDADE
		INNER JOIN DMSys.D_TIPO_EMPREENDIMENTO H ON H.SK_TIPO_EMPREENDIMENTO = A.SK_D_TIPO_EMPREENDIMENTO
		LEFT JOIN MENOR_DATA_VENDA x ON EMP.SK_D_EMPREENDIMENTO = x.SK_D_EMPREENDIMENTO
		LEFT JOIN DMFinanceiro.F_DISTRATO I ON cto.NUMERO_CONTRATO = I.NUMERO_CONTRATO
			-- Renato Almeida: Condições adicionadas ao join para garantir que as datas de distrato sejam apenas do mesmo ano/mes que a data base
			AND YEAR(I.DATA_DISTRATO) = YEAR(FUN.DATA_BASE)
			AND MONTH(I.DATA_DISTRATO) = MONTH(FUN.DATA_BASE)
	WHERE X.SAFRA IS NOT NULL
		--AND B.NOME_EMPREENDIMENTO = 'VITTA BENASSI'
		--AND NOME_TORRE = 'TORRE 05'
		--AND NOME_BLOCO = 'BLOCO B'
		--AND NUMERO_APARTAMENTO = 14
	--ORDER BY DATA_BASE;
